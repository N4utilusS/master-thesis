<?xml version="1.0" ?>
<argos-configuration>

  <!-- ************************* -->
  <!-- * General configuration * -->
  <!-- ************************* -->
  <framework>
  	<!-- To make ARGoS faster, you can set 'threads' to some number greater than 0 -->
    <system threads="8" />
    <experiment length="0"
      ticks_per_second="10"
      real_time="true"
      vss_host="10.0.1.200"
      vss_port="4050"/>
  </framework>

  <!-- ****************** -->
  <!-- * Loop functions * -->
  <!-- ****************** -->
  <loop_functions library="/home/adebruyn/argos3-anthony-controllers/build/controllers/frontal_barrier/libfrontal_barrier_lp" label="frontal_barrier_lp">

    <frontal_barrier_lp dangerAreaCentre="0.0,0.0"
                        dangerAreaRadius="0.50"/>

  </loop_functions>

  <!-- *************** -->
  <!-- * Controllers * -->
  <!-- *************** -->
  <controllers>

    <!-- ***************************************************** -->
    <!-- * This is the controller to associate to robots     * -->
    <!-- ***************************************************** -->

    <!-- C++ controller -->
    <e-puck_frontal_barrier_oc_controller id="cppAgent"
                        library="/home/adebruyn/argos3-anthony-controllers/build/controllers/frontal_barrier/libe-puck_frontal_barrier_oc_controller">
      <actuators>
        <epuck_wheels implementation="default" />
        <epuck_rgb_leds implementation="default" medium="leds"/>
      </actuators>
      <sensors>
        <epuck_proximity implementation="default" show_rays="true" noise_level="0.0" calibrated="true" low_level_config="/home/root/adebruyn/low_level_configuration/proximity_sensor.xml" />
        <epuck_omnidirectional_camera implementation="rot_z_only" medium="leds" show_rays="false" noise_std_dev="0.0" calibrated="true" low_level_config="/home/root/adebruyn/low_level_configuration/omnidirectional_camera_sensor.xml"/>
        <virtual_rgb_ground_sensor implementation="default" real_experiment="true"/>
      </sensors>
      <params defaultSpeed="5" 
      	humanPotentialGain="500" 
      	humanPotentialDistance="35" 
        humanPotentialDistanceVariationDelta="0.5" 
      	agentPotentialGain="100" 
      	agentPotentialDistance="50" 
        gravityPotential="true"
        gravityPotentialGain="5"
        humanLeftColorRef="red"
        humanRightColorRef="green"
        agentGoodColor="0,0,125"
        agentBadColor="0,0,125"
        agentGoodColorRef="blue"
        agentBadColorRef="blue"
        directionVectorsWindowSize="2"
      />
    </e-puck_frontal_barrier_oc_controller>

    <e-puck_frontal_barrier_human_oc_controller id="cppHumanLeft"
                        library="/home/adebruyn/argos3-anthony-controllers/build/controllers/frontal_barrier/libe-puck_frontal_barrier_human_oc_controller">
      <actuators>
        <epuck_wheels implementation="default" />
        <epuck_rgb_leds implementation="default" medium="leds"/>
      </actuators>
      <sensors>
        <epuck_proximity implementation="default" show_rays="true" noise_level="0.0" calibrated="true" low_level_config="/home/root/adebruyn/low_level_configuration/proximity_sensor.xml" />
        <epuck_omnidirectional_camera implementation="rot_z_only" medium="leds" show_rays="false" noise_std_dev="0.1" calibrated="true" low_level_config="/home/root/adebruyn/low_level_configuration/omnidirectional_camera_sensor.xml"/>
        <epuck_ground implementation="rot_z_only" noise_level="0.0"/>
      </sensors>
      <params
        leftSpeed="0"
        rightSpeed="0"
        color="0,0,125"
      />
    </e-puck_frontal_barrier_human_oc_controller>

    <e-puck_frontal_barrier_human_oc_controller id="cppHumanRight"
                        library="/home/adebruyn/argos3-anthony-controllers/build/controllers/frontal_barrier/libe-puck_frontal_barrier_human_oc_controller">
      <actuators>
        <epuck_wheels implementation="default" />
        <epuck_rgb_leds implementation="default" medium="leds" />
      </actuators>
      <sensors>
        <epuck_proximity implementation="default" show_rays="true" noise_level="0.0" calibrated="true" low_level_config="/home/root/adebruyn/low_level_configuration/proximity_sensor.xml" />
        <epuck_omnidirectional_camera implementation="rot_z_only" medium="leds" show_rays="false" noise_std_dev="0.1" calibrated="true" low_level_config="/home/root/adebruyn/low_level_configuration/omnidirectional_camera_sensor.xml"/>
        <epuck_ground implementation="rot_z_only" noise_level="0.0"/>
      </sensors>
      <params
        leftSpeed="0"
        rightSpeed="0"
        color="0,255,0"
      />
    </e-puck_frontal_barrier_human_oc_controller>

  </controllers>

  <!-- *********************** -->
  <!-- * Arena configuration * -->
  <!-- *********************** -->
  <arena size="10, 10, 1" center="0,0,0.5">

    <!-- Floor -->
    <floor id="floor" source="loop_functions" pixels_per_meter="100" />

    <!-- Walls >
    <box id="bn" size="0.1, 6, 0.2" movable="false">
      <body position="3,0,0" orientation="0,0,0" />
    </box>
    <box id="bs" size="0.1, 6, 0.2" movable="false">
      <body position="-3,0,0" orientation="0,0,0" />
    </box>
    <box id="be" size="6, 0.1, 0.2" movable="false">
      <body position="0,-3,0" orientation="0,0,0" />
    </box>
    <box id="bw" size="6, 0.1, 0.2" movable="false">
      <body position="0,3,0" orientation="0,0,0" />
    </box-->

    <!--e-puck id="human1" >
      <body position="0,0,0" orientation="0,0,0" />
      <controller config="cppHumanLeft"/>
    </e-puck>
    
    <e-puck id="human2" >
      <body position="0,-0.1,0" orientation="0,0,0" />
      <controller config="cppHumanRight"/>
    </e-puck>
    
    <!--distribute>
      <position method="uniform" min="-0.5,-0.5,0" max="0.5,0.5,0" /> 
      <orientation method="gaussian" mean="0,0,0" std_dev="360,0,0" /> 
      <entity quantity="3" max_trials="100"> 
        <e-puck id="agent" omnidirectional_camera_aperture="80">
          <controller config="cppAgent" /> 
        </e-puck>
      </entity> 
    </distribute-->

    <e-puck id="epuck_8_55" omnidirectional_camera_aperture="80">
      <body position="-1,-0.1,0" orientation="0,0,0" />
      <controller config="cppAgent" /> 
    </e-puck>
    <e-puck id="epuck_9_38" omnidirectional_camera_aperture="80">
      <body position="-1,-0.1,0" orientation="0,0,0" />
      <controller config="cppAgent" /> 
    </e-puck>
    <e-puck id="epuck_3_61" omnidirectional_camera_aperture="80">
      <body position="-1,-0.1,0" orientation="0,0,0" />
      <controller config="cppAgent" /> 
    </e-puck>
    <e-puck id="epuck_2_30" omnidirectional_camera_aperture="80">
      <body position="-1,-0.1,0" orientation="0,0,0" />
      <controller config="cppAgent" /> 
    </e-puck>
    <e-puck id="epuck_6_41" omnidirectional_camera_aperture="80">
      <body position="-1,-0.1,0" orientation="0,0,0" />
      <controller config="cppAgent" /> 
    </e-puck>
    <e-puck id="epuck_4_33" omnidirectional_camera_aperture="80">
      <body position="-1,-0.1,0" orientation="0,0,0" />
      <controller config="cppAgent" /> 
    </e-puck>
    <e-puck id="epuck_5_49" omnidirectional_camera_aperture="80">
      <body position="-1,-0.1,0" orientation="0,0,0" />
      <controller config="cppAgent" /> 
    </e-puck>
    <e-puck id="epuck_7_52" omnidirectional_camera_aperture="80">
      <body position="-1,-0.1,0" orientation="0,0,0" />
      <controller config="cppAgent" /> 
    </e-puck>
  </arena>

  <!-- ******************* -->
  <!-- * Physics engines * -->
  <!-- ******************* -->
  <physics_engines>
    <!--dynamics2d id="dyn2d"/-->
    <iridia_tracking_system 
      id="its"
      its_host="164.15.10.153"
      its_port="4040"
      translate_x="0.734"
      translate_y="3.87"
      distance_ratio="0.43"/>
  </physics_engines>

  <!-- ********* -->
  <!-- * Media * -->
  <!-- ********* -->
  <media>
    <led id="leds" index="grid" grid_size="1,1,1" />
  </media>

  <!-- ****************** -->
  <!-- * Visualization * -->
  <!-- ****************** -->
  <visualization>

    <!-- ************************************************************************ -->
    <!-- * To activate the Lua editor, just use the 'lua_editor' flag attribute * -->
    <!-- ************************************************************************ -->
    <qt-opengl lua_editor="false">
      <camera>
        <placement idx="0" position="-0.00569879,0.01,4.86243" look_at="-0.00569879,0.01,3.86243" lens_focal_length="20" />
        <placement idx="1" position="-2,0,2" look_at="0,0,0" lens_focal_length="20" />
        <placement idx="2" position="0.884183,0.359128,0.490269" look_at="0.924486,-0.486744,-0.0415919" lens_focal_length="20" />
      </camera>
    </qt-opengl>

  </visualization>

</argos-configuration>
